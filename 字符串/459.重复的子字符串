# 459.重复的子字符串

## 题目
给定一个非空的字符串，判断它是否可以由它的一个子串重复多次构成。给定的字符串只含有小写英文字母，并且长度不超过10000。

      示例 1:
      输入: "abab"
      输出: True
      解释: 可由子字符串 "ab" 重复两次构成。

      示例 2:
      输入: "aba"
      输出: False

## 解题思路
首先明确的一点，如果字符串 S 包含一个重复的子字符串，那么这意味着您可以多次 “移位和换行”`您的字符串，并使其与原始字符串匹配。（移位子字符串的长度即与原始字符串匹配）

  例如：abcabc
  移位一次：cabcab
  移位两次：bcabca
  移位三次：abcabc
  现在字符串和原字符串匹配了，所以可以得出结论存在重复的子串。
为了避免这种无用的环绕，可以创建一个新的字符串 str，它等于原来的字符串 S 再加上 S 自身，这样其实就包含了所有移动的字符串。
所以可以直接判断 str 中去除首尾元素之后，是否包含自身元素。如果包含。则表明存在重复子串。去除首尾字符元素后的字符串包含了所有移动的结果（从第一个元素移动到倒数第二个元素）

## 代码
```java
class Solution {
   public boolean repeatedSubstringPattern(String s) {
        String str = s + s;
        return str.substring(1, str.length() - 1).contains(s);
   }
}
```

