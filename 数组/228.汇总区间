# 228.汇总区间

## 题目描述
给定一个无重复元素的有序整数数组 nums 。返回 恰好覆盖数组中所有数字 的 最小有序 区间范围列表。也就是说，nums 的每个元素都恰好被某个区间范围所覆盖，并且不存在属于某个范围但不属于 nums 的数字 x 。列表中的每个区间范围 [a,b] 应该按如下格式输出：
- "a->b" ，如果 a != b
- "a" ，如果 a == b

    示例 1：

    输入：nums = [0,1,2,4,5,7]
    输出：["0->2","4->5","7"]
    解释：区间范围是：
    [0,2] --> "0->2"
    [4,5] --> "4->5"
    [7,7] --> "7"

## 解题思路
- 思路
  对于包含连续元素的一段区间。如果相邻的元素之间的差值大于 11，那么这两个元素肯定不属于一段区间。

- 算法
 为了得出这些区间，我们需要找到一种方法将它们分开。题目所给出的数组是有序的，同时还没有重复元素。在这样的数组里面，两个相邻的元素的差值要么等于 1 要么大于 1。对于那些差值等于 1 的就将它们被放在同一段区间内；否则，就将把它们放在不同的区间。
 我们还需要知道的是一段区间的起始坐标，这样就可以把它们放进结果里面了。因此，我们需要保存两个坐标，分别代表一段区间的两个分界点。对于遍历到的每个新元素来说，检查一下它是否可以拓展当前的区间，如果不能，就把当前的元素作为一个新的区间的开始。
 不要忘记把最后一段区间也放进结果里面。这个逻辑很容易实现，你可以在循环里通过一个特定的判断条件来加入或者在循环结束后加入。

## 代码
```java
class Solution {
    public List<String> summaryRanges(int[] nums) {
        List<String> summary = new ArrayList<>();
        for(int i,j=0; j<nums.length; j++){
            i=j;
            while(j+1<nums.length && nums[j+1]==nums[j]+1)
                ++j;
            //put the range to list
            if(i==j)
                summary.add(nums[i] + "");
            else
                summary.add(nums[i] + "->" + nums[j]);
        }
        return summary;
    }
}
```
